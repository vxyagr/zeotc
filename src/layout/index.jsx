import React, { useState } from 'react';

import { Box } from '@mui/material';
import Head from 'next/head';

import Scrollbar from 'components/Scrollbar';

import Footer from './Footer';
import SideDrawer from './SideBar';

const drawerWidth = 254;

export default function Home({ children, }) {
  const [isOpen, setIsOpen] = useState(true);

  return (
    <Box
      sx={{
        minHeight: '100vh',
        overflow: 'hidden',
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'end',
        justifyContent: 'space-between',
      }}
    >
      <Head>
        <title>ZEOTC</title>

        <meta
          name='description'
          content='Generated by create next app'
        />

        <link
          rel='icon'
          href='/Logo.svg'
        />
      </Head>

      <SideDrawer setIsOpen={setIsOpen} />

      <Box
        sx={{
          // width: { xs:'100%', md: isOpen ? '70%' : '90%', lg: isOpen ? '80%' : '92%', },
          // isOpen ? `calc(100% - ${drawerWidth + 40}px)` :'90%',
          // width: isOpen ? '100%' - drawerWidth :'100%',
          // ml: isOpen ? `${drawerWidth + 40}px` : 0,
          width: {
            xs: '100%',
            md: isOpen ? `calc(100% - ${drawerWidth + 40}px)` : '90%',
            lg: isOpen ? `calc(100% - ${drawerWidth + 40}px)` : '92.5%',
          },
          transition: 'width 0.2s',
          flexGrow: 1,
          // pl: 2,
          // pr: { xs: 2, md: 6, lg: 8 },
          // mx:'auto',
          mt: {
            xs: 16,
            md: 6,
          },
          height: {
            md: '60vh',
          },
          overflow: 'auto',
          borderBottom: '10px solid #000',

          // border:'2px solid red'
        }}
      >
        <Scrollbar>
          <Box
            sx={{
              display: 'flex',
              justifyContent: 'center',
              px: 2,
            }}
          >
            {children}
          </Box>
        </Scrollbar>
      </Box>

      {/* footer */}

      <Box
        sx={{
          // width: { xs: '100%', md: isOpen ? `calc(100% - ${drawerWidth + 40}px)` : '90%', lg: isOpen ? `calc(100% - ${drawerWidth + 40}px)` : '92.8%' },
          // transition: `width 0.2s`,
          // ml: isOpen ? `${drawerWidth + 40}px` : 0,
          width: '100%',
          transition: 'width 0.2s',

          px: 2.2,
          pb: {
            md: 1,
            lg: 2,
          },
        }}
      >
        <Footer />
      </Box>
    </Box>
  );
}
